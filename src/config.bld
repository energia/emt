/*
 *  ======== config.bld ========
 *  This script is run prior to all build scripts.  It initializes the
 *  rootDir configuration parameter of all supported targets.
 *
 */

var vtools = environment["TOOLS"] + "/vendors";
var os     = environment["xdc.hostOS"];

var tiTargets = xdc.loadPackage('ti.targets.arm.elf');
tiTargets.M4.rootDir         = vtools + "/ti/arm/5.2.2/" + os;
tiTargets.M4.ccOpts.suffix  += " -ms --relaxed_ansi  --display_error_number ";
tiTargets.M4F.rootDir        = tiTargets.M4.rootDir;
tiTargets.M4F.ccOpts.suffix += " -ms --relaxed_ansi  --display_error_number ";

var gnuTargets = xdc.loadPackage('gnu.targets.arm');
gnuTargets.M4.rootDir   = vtools + "/linaro/4.8-2014q3/" + os;
gnuTargets.M4.LONGNAME  = "bin/arm-none-eabi-gcc";
gnuTargets.M4F.rootDir  = gnuTargets.M4.rootDir;
gnuTargets.M4F.LONGNAME = gnuTargets.M4.LONGNAME;

var iarTargets = xdc.loadPackage('iar.targets.arm');
iarTargets.M4.rootDir  = "/db/vendors/iar/arm/6.60a/" + os;
iarTargets.M4F.rootDir = iarTargets.M4.rootDir;

Build.targets = [
    tiTargets.M4F,
    gnuTargets.M4F
];

Pkg.releasePrefix = "^/../exports/";

/* For now, the default is not to export executables. Any platform package that
 * can execute programs should export executables in its package.bld, so the
 * program execution can be tested.
 */     
Pkg.attrs.exportExe = false;

/* include source files in the release package */
Pkg.attrs.exportSrc = true;
Pkg.attrs.exportCfg = true;

Pkg.attrs.archiver = "zip"; 

Pkg.producerId = xdc.csd();
