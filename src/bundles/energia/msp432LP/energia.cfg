/*
 *  ======== energia.cfg ========
 *  @fileOverview Wiring Configuration
 */
xdc.loadPackage("ti.runtime.wiring.msp432");

/* ================ General configuration ================ */
var Defaults = xdc.useModule('xdc.runtime.Defaults');
var Diags = xdc.useModule('xdc.runtime.Diags');
var Error = xdc.useModule('xdc.runtime.Error');
var Main = xdc.useModule('xdc.runtime.Main');
var Memory = xdc.useModule('xdc.runtime.Memory');
var System = xdc.useModule('xdc.runtime.System');
var Text = xdc.useModule('xdc.runtime.Text');

var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Clock = xdc.useModule('ti.sysbios.knl.Clock');
var Event = xdc.useModule('ti.sysbios.knl.Event');
var Mailbox = xdc.useModule('ti.sysbios.knl.Mailbox');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Swi = xdc.useModule('ti.sysbios.knl.Swi');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');
var Load = xdc.useModule('ti.sysbios.utils.Load');
var GateMutex = xdc.useModule('ti.sysbios.gates.GateMutex');

var Boot = xdc.useModule('ti.sysbios.family.arm.msp432.init.Boot');
//Boot.speedSelect = Boot.SpeedOpt_Low;    /* 12 MHz */
//Boot.speedSelect = Boot.SpeedOpt_Medium; /* 24 MHz */
//Boot.speedSelect = Boot.SpeedOpt_High;   /* 48 MHz */

/* HACK!! we must configure family-specific Hwi module */
var Settings = xdc.module("ti.sysbios.family.Settings");
var hwiDelegate = Settings.getDefaultHwiDelegate();
xdc.module(hwiDelegate).isTiva = true;

/* HACK: use custom heap since HeapMem can't be configured via linker syms */
var HeapRem = xdc.useModule('ti.runtime.heaps.HeapRem');
var heapRemParams = new HeapRem.Params;
Memory.defaultHeapInstance = HeapRem.create(heapRemParams);
Program.heap = Memory.defaultHeapSize;

/*  Don't add driverlib to generated linker command file (so
 *  closure will not have any absolute paths) 
 */
var Platform = Program.platform.$module;
Platform.addDriverLibs = false;

/* ================ System configuration ================ */
//var SysMin = xdc.useModule('xdc.runtime.SysMin');
//SysMin.bufSize = 1024;
//System.SupportProxy = SysMin;

var SysCallback = xdc.useModule('xdc.runtime.SysCallback');
System.SupportProxy = SysCallback;

/* add %f System_printf format support */
System.extendedFormats = "%f%$S";

/* move all log/error strings off the target (let the host do the display) */
Text.isLoaded = false;

/* setup Timestamp to use SysTick timer */
var TimestampProvider = xdc.useModule('ti.sysbios.family.arm.m3.TimestampProvider');
var Timestamp = xdc.useModule('xdc.runtime.Timestamp');
Timestamp.SupportProxy = TimestampProvider;

/* to get more analogWrite pins, use a timer that doesn't consume mappable PWM resources */
Clock.timerId = 2;

/* Save power using DYNAMIC tick mode */
//Clock.tickMode = Clock.TickMode_DYNAMIC;

/* ================ Driver configuration ================ */
var TIRTOS = xdc.useModule('ti.tirtos.TIRTOS');
TIRTOS.useGPIO = true;
TIRTOS.useUART = true;
TIRTOS.useI2C = true;
TIRTOS.usePWM = true;
TIRTOS.useSPI = true;

/* ================ SYS/BIOS configuration =============== */
BIOS.libType = BIOS.LibType_Debug;
BIOS.libType = BIOS.LibType_Custom;
BIOS.assertsEnabled = false;
BIOS.logsEnabled = false;
//BIOS.heapSize = 0; /* use HeapRem instead (to use all avail post link mem) */
Program.stack = 1024;

Task.idleTaskStackSize = 1024;
Task.numPriorities = 4;            /* set # of task priorities to save space */
Task.common$.namedInstance = true; /* instance names used by debug monitor */

/* disable elaborate Hwi exception dump */
var m3Hwi = xdc.useModule(hwiDelegate);
m3Hwi.enableException = false;
m3Hwi.excHandlerFunc = null;

/* use spin loops for abort and exit */
System.maxAtexitHandlers = 4;
System.exitFxn = System.exitSpin;
System.abortFxn = System.abortSpin;

/* minimize Flash and RAM usage of Error module */
Error.policyFxn = Error.policySpin;
Error.raiseHook = null;
Error.maxDepth = 2;

/* remove Swi support */
BIOS.swiEnabled = false;

/* disable Hwi and Task stack checking */
Hwi.checkStackFlag = false;
Task.checkStackFlag = false;

/* remove Hwi processing code from Load.c */
var Build = xdc.useModule('ti.sysbios.Build');
Build.ccArgs.$add("-Dti_sysbios_utils_Load_hwiEnabled__D=FALSE");
