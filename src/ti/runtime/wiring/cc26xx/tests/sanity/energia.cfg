/*
 *  ======== energia.cfg ========
 *  @fileOverview Wiring Configuration
 */
xdc.loadPackage("ti.runtime.wiring.cc26xx");

/* ================ General configuration ================ */
var Defaults = xdc.useModule('xdc.runtime.Defaults');
var Diags = xdc.useModule('xdc.runtime.Diags');
var Error = xdc.useModule('xdc.runtime.Error');
var Main = xdc.useModule('xdc.runtime.Main');
var Memory = xdc.useModule('xdc.runtime.Memory');
var System = xdc.useModule('xdc.runtime.System');
var Text = xdc.useModule('xdc.runtime.Text');

var BIOS = xdc.useModule('ti.sysbios.BIOS');
var Clock = xdc.useModule('ti.sysbios.knl.Clock');
var Event = xdc.useModule('ti.sysbios.knl.Event');
var Mailbox = xdc.useModule('ti.sysbios.knl.Mailbox');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Swi = xdc.useModule('ti.sysbios.knl.Swi');
var Task = xdc.useModule('ti.sysbios.knl.Task');
var Hwi = xdc.useModule('ti.sysbios.hal.Hwi');
var Timer = xdc.useModule('ti.sysbios.hal.Timer');
var Load = xdc.useModule('ti.sysbios.utils.Load');

/* add GateMutex because the wiring library uses it */
var GateMutex = xdc.useModule('ti.sysbios.gates.GateMutex');

/* HACK!! we must configure family-specific Hwi module */
var Settings = xdc.module("ti.sysbios.family.Settings");
var hwiDelegate = Settings.getDefaultHwiDelegate();
xdc.module(hwiDelegate).isTiva = true;

/* HACK: use custom heap since HeapMem can't be configured via linker syms */
var HeapRem = xdc.useModule('ti.runtime.heaps.HeapRem');
var heapRemParams = new HeapRem.Params;
Memory.defaultHeapInstance = HeapRem.create(heapRemParams);
Program.heap = Memory.defaultHeapSize;

/* ================ System configuration ================ */

var SysCallback = xdc.useModule('xdc.runtime.SysCallback');
System.SupportProxy = SysCallback;

/* trim extended formats as much as possible (add %f??) */
System.extendedFormats = "%$S";

/* move all log/error strings off the target (let the host do the display) */
Text.isLoaded = false;

/* setup Timestamp to use SysTick timer */
var TimestampProvider = xdc.useModule('ti.sysbios.family.arm.m3.TimestampProvider');
var Timestamp = xdc.useModule('xdc.runtime.Timestamp');
Timestamp.SupportProxy = TimestampProvider;

/* Save power using DYNAMIC tick mode */
Clock.tickMode = Clock.TickMode_DYNAMIC;

/* ================ Driver configuration ================ */
var TIRTOS = xdc.useModule('ti.tirtos.TIRTOS');
TIRTOS.useGPIO = true;
TIRTOS.useUART = true;
TIRTOS.useI2C = true;
TIRTOS.usePWM = true;
TIRTOS.useSPI = true;

/* ================ SYS/BIOS configuration =============== */
BIOS.libType = BIOS.LibType_Debug;
BIOS.libType = BIOS.LibType_Custom;
BIOS.assertsEnabled = false;
BIOS.logsEnabled = false;
//BIOS.heapSize = 32768;
Program.stack = 1024;

/* place xdc meta data explicitly */
Program.sectionsExclude = "xdc\.meta";

Task.idleTaskStackSize = 1024;
Task.numPriorities = 4;            /* set # of task priorities to save space */
Task.common$.namedInstance = true; /* instance names used by debug monitor */

/* disable elaborate Hwi exception dump */
var m3Hwi = xdc.useModule(hwiDelegate);
m3Hwi.enableException = false;
m3Hwi.excHandlerFunc = null;

/* use spin loops for abort and exit */
System.maxAtexitHandlers = 4;
System.exitFxn = System.exitSpin;
System.abortFxn = System.abortSpin;

/* minimize Flash and RAM usage of Error module */
Error.policyFxn = Error.policySpin;
Error.raiseHook = null;
Error.maxDepth = 2;

/* remove Swi support */
BIOS.swiEnabled = false;

/* disable Hwi and Task stack checking */
Hwi.checkStackFlag = false;
Task.checkStackFlag = false;

/* remove Hwi processing code from Load.c */
var Build = xdc.useModule('ti.sysbios.Build');
Build.ccArgs.$add("-Dti_sysbios_utils_Load_hwiEnabled__D=FALSE");

var DLIBROOT = Program.platform.$module.findDriverLib();
Build.ccArgs.$add("-Dti_sysbios_utils_Load_hwiEnabled__D=FALSE");
Build.ccArgs.$add("-I" + DLIBROOT);
