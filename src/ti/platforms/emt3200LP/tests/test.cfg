/* set the program's entry point to the Sanity module's main() function */
var Program = xdc.module("xdc.cfg.Program");

Program.main = null;
Program.heap = 0x100;
Program.stack = 0x100;

var SourceDir = xdc.module("xdc.cfg.SourceDir");
SourceDir.verbose = 7;
SourceDir.outputDir = "src/" + Program.name + ".src";

var Memory = xdc.useModule("xdc.runtime.Memory");
Memory.defaultHeapSize = 0x40;

/* the following section is needed to work around an problem in the rts
 * packages for arm: both TI and Gnu boot files define a .bootVects section, 
 * but only TI creates the section below (if it's not already defined).  
 * The issue is that, if the TI rts package defines this sectios it _also_ 
 * places this section at 0 but the CC3200 does not have 0 in the link
 * memory map(!) this triggers a link error.
 * 
 * In order to link with SYS/BIOS, we should set the type to "DESCT" because
 * SYS/BIOS will replces this section with its own.
 * 
 * In order to link without SYS/BIOS, type should not be set and the address 
 * should be set to 0x20004000
 */
Program.sectMap[".bootVecs"] = new Program.SectionSpec();
//Program.sectMap[".bootVecs"].type = "DSECT";
Program.sectMap[".bootVecs"].loadAddress = 0x20004000;

var prefix = "PERIPHERALS:\n";
for (var name in Program.cpu.attrs.peripherals) {
    print(prefix + name);
    prefix = "";
    var peripheral = Program.cpu.attrs.peripherals[name].$orig;
    print("    " + peripheral.$name);

    /* check that peripherals are fully defined */
    for (var prop in peripheral) {
        var value = peripheral[prop];
        print("        " + name + "." + prop + ": " + value);
        if (value === undefined && prop != "owner") {
            Program.$logError(prop + " is undefined", peripheral, prop);
        }
    }
}

prefix = "\nMEMORY:";
for (var prop in Program.cpu.memoryMap) {
    if (prefix) print(prefix);
    prefix = null;
    print("    " + Program.cpu.memoryMap[prop].name
        + ", 0x" + Program.cpu.memoryMap[prop].base.toString(16)
        + ", 0x" + Program.cpu.memoryMap[prop].len.toString(16));
}

var sectMap = Program.getSectMap();
var prefix = "\nSECTIONS:";
for (var prop in sectMap) {
    if (prefix) print(prefix);
    prefix = null;
    print("    " + prop + ", type: " + sectMap[prop].type);
}
